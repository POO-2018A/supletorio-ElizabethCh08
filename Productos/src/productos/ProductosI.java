/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package productos;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ESFOT
 */
public class ProductosI extends javax.swing.JFrame {
    ArrayList<Object> productos = new ArrayList<>();
    ClsControlador controller = new ClsControlador();
    int cont = 0;
        

    /**
     * Creates new form ProductosI
     */
    public ProductosI() {
        initComponents();
        productos = controller.extraerObjetos("producto.dat");
        llenarGrid();
        panelComputador.setVisible(false);
        panelComponente.setVisible(false);
        panelAccesorio.setVisible(false);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtPrecioProducto = new javax.swing.JTextField();
        txtMarcaProducto = new javax.swing.JTextField();
        cmbCategoria = new javax.swing.JComboBox<>();
        panelComputador = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCapacidadComp = new javax.swing.JTextField();
        txtRAM = new javax.swing.JTextField();
        txtProcesador = new javax.swing.JTextField();
        btnOkComput = new javax.swing.JButton();
        cmbTipoComputador = new javax.swing.JComboBox<>();
        panelAccesorio = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTipoAcc = new javax.swing.JTextField();
        txtColorAcc = new javax.swing.JTextField();
        btnOkAcc = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        panelComponente = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtTipoCompo = new javax.swing.JTextField();
        txtCapacidadCompo = new javax.swing.JTextField();
        txtVelocidadCompo = new javax.swing.JTextField();
        btnOkComp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        btnImprimirProductos = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Productos");

        jLabel2.setText("Nombre");

        jLabel3.setText("Precio");

        jLabel4.setText("Marca");

        jLabel5.setText("Categoria");

        txtNombreProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreProductoKeyTyped(evt);
            }
        });

        txtPrecioProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioProductoKeyTyped(evt);
            }
        });

        txtMarcaProducto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMarcaProductoKeyTyped(evt);
            }
        });

        cmbCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Accesorio", "Componente", "Computador" }));

        panelComputador.setBorder(javax.swing.BorderFactory.createTitledBorder("Computador"));

        jLabel1.setText("Tipo");

        jLabel6.setText("Capacidad");

        jLabel7.setText("RAM");

        jLabel8.setText("Procesador");

        txtCapacidadComp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapacidadCompKeyTyped(evt);
            }
        });

        txtRAM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRAMKeyTyped(evt);
            }
        });

        txtProcesador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProcesadorKeyTyped(evt);
            }
        });

        btnOkComput.setText("OK");
        btnOkComput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkComputActionPerformed(evt);
            }
        });

        cmbTipoComputador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lap-top", "PC" }));

        javax.swing.GroupLayout panelComputadorLayout = new javax.swing.GroupLayout(panelComputador);
        panelComputador.setLayout(panelComputadorLayout);
        panelComputadorLayout.setHorizontalGroup(
            panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComputadorLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(54, 54, 54)
                .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelComputadorLayout.createSequentialGroup()
                        .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtProcesador, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE)
                            .addComponent(txtRAM)
                            .addComponent(txtCapacidadComp))
                        .addGap(40, 40, 40))
                    .addGroup(panelComputadorLayout.createSequentialGroup()
                        .addComponent(cmbTipoComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(panelComputadorLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnOkComput)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelComputadorLayout.setVerticalGroup(
            panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComputadorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panelComputadorLayout.createSequentialGroup()
                        .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cmbTipoComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtCapacidadComp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7))
                    .addComponent(txtRAM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelComputadorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtProcesador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOkComput)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        panelAccesorio.setBorder(javax.swing.BorderFactory.createTitledBorder("Accesorio"));

        jLabel9.setText("Tipo");

        jLabel10.setText("Color");

        txtTipoAcc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTipoAccKeyTyped(evt);
            }
        });

        txtColorAcc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtColorAccKeyTyped(evt);
            }
        });

        btnOkAcc.setText("OK");
        btnOkAcc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkAccActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAccesorioLayout = new javax.swing.GroupLayout(panelAccesorio);
        panelAccesorio.setLayout(panelAccesorioLayout);
        panelAccesorioLayout.setHorizontalGroup(
            panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccesorioLayout.createSequentialGroup()
                .addGroup(panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAccesorioLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(panelAccesorioLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(15, 15, 15)))
                .addGroup(panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtTipoAcc, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                    .addComponent(txtColorAcc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOkAcc)
                .addContainerGap())
        );
        panelAccesorioLayout.setVerticalGroup(
            panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAccesorioLayout.createSequentialGroup()
                .addGroup(panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtTipoAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOkAcc))
                .addGap(18, 18, 18)
                .addGroup(panelAccesorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtColorAcc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jButton1.setText("Ok");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        panelComponente.setBorder(javax.swing.BorderFactory.createTitledBorder("Componente"));

        jLabel11.setText("Tipo");

        jLabel12.setText("Capacidad");

        jLabel13.setText("Velocidad");

        txtTipoCompo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTipoCompoKeyTyped(evt);
            }
        });

        txtCapacidadCompo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCapacidadCompoKeyTyped(evt);
            }
        });

        txtVelocidadCompo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVelocidadCompoKeyTyped(evt);
            }
        });

        btnOkComp.setText("OK");
        btnOkComp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkCompActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelComponenteLayout = new javax.swing.GroupLayout(panelComponente);
        panelComponente.setLayout(panelComponenteLayout);
        panelComponenteLayout.setHorizontalGroup(
            panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComponenteLayout.createSequentialGroup()
                .addGroup(panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(13, 13, 13)
                .addGroup(panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCapacidadCompo)
                    .addComponent(txtTipoCompo)
                    .addComponent(txtVelocidadCompo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(32, 32, 32))
            .addGroup(panelComponenteLayout.createSequentialGroup()
                .addComponent(btnOkComp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelComponenteLayout.setVerticalGroup(
            panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelComponenteLayout.createSequentialGroup()
                .addGroup(panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTipoCompo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtCapacidadCompo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelComponenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtVelocidadCompo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOkComp))
        );

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Precio", "Marca", "Categoria"
            }
        ));
        jScrollPane1.setViewportView(tblProductos);

        btnImprimirProductos.setText("Imprimir lista");
        btnImprimirProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirProductosActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel14.setText("PRODUCTOS KCH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(panelComponente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(panelAccesorio, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(56, 56, 56)
                                        .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5))
                                        .addGap(46, 46, 46)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtMarcaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(79, 79, 79)
                                .addComponent(panelComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnImprimirProductos)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 116, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtPrecioProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtMarcaProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(cmbCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(panelAccesorio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panelComputador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelComponente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnImprimirProductos)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nombre = txtNombreProducto.getText();
        String precio = txtPrecioProducto.getText();
        String marca = txtMarcaProducto.getText();
        String categoria = cmbCategoria.getSelectedItem().toString();
        
        if (nombre.equals("") || precio.equals("") || marca.equals("")) { 
            JOptionPane.showMessageDialog(rootPane, "Debe ingresar todos los campos");
        } else {
             try {
               double precio1= Double.parseDouble(txtPrecioProducto.getText());
               if(categoria.equals("Accesorio")){
                   panelAccesorio.setVisible(true);
               }else if(categoria.equals("Componente")){
                   panelComponente.setVisible(true);
               }else if(categoria.equals("Computador")){
                   panelComputador.setVisible(true);
               }
               
             }  
             catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(rootPane, "Debe ingresar solo numeros en el precio");
                
            }
        }
        
       
        
        
          
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnOkComputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkComputActionPerformed
        // TODO add your handling code here:
            /*String nombre= txtNombreProducto.getText();
            double precio= Double.parseDouble(txtPrecioProducto.getText());
            String marca= txtMarcaProducto.getText();
            String categoria = cmbCategoria.getSelectedItem().toString();*/
            
            String tipo = cmbTipoComputador.getSelectedItem().toString();
            String capacidad=txtCapacidadComp.getText();
            String ramPC=txtRAM.getText();
            String procesador= txtProcesador.getText();
            
            //String tipoPC= (String) cmbTipoComputador.getSelectedItem();
            //int capacidadPC= Integer.valueOf(txtCapacidadComp.getText());
            //int ramPC= Integer.valueOf(txtRAM.getText());
            //String procesadorPC= txtProcesador.getText();
            
            /*Productos compu = new Computador(nombre,precio,marca,categoria);
            productos.add(compu);
            controller.escribirObjeto("producto.dat",productos);
            productos = controller.extraerObjetos("producto.dat");*/
            if (ramPC.equals("")||capacidad.equals("")||procesador.equals("")){
                 JOptionPane.showMessageDialog(rootPane," Ingrese todos los campos  ");
           }else{
          try {
               int cp= Integer.parseInt(txtCapacidadComp.getText());
               int ram= Integer.parseInt(txtRAM.getText());
          
           
            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(rootPane, "Ingrese numeros en capacidad y memoria");
                txtCapacidadComp.setText("");
                txtRAM.setText("");
            }
           }
            
           // modeloTablaProductos.addRow(new String[]{nombre,String.valueOf(precio),marca});
            
    }//GEN-LAST:event_btnOkComputActionPerformed

    private void btnImprimirProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirProductosActionPerformed
        
        cont++;
        String categoria = "" + cmbCategoria.getSelectedItem();
        Productos newProducto = new Productos(txtNombreProducto.getText(),Double.parseDouble( txtPrecioProducto.getText()),txtMarcaProducto.getText(),categoria);
        productos.add(newProducto);
        controller.escribirObjeto("productos.dat", productos);
        productos = controller.extraerObjetos("productos.dat");
        Object productoG[] = { newProducto.getNombre(), newProducto.getPrecio(), newProducto.getMarca(), newProducto.getCategoria()};
        DefaultTableModel model = (DefaultTableModel) tblProductos.getModel();
        model.addRow(productoG);
        
        
    }//GEN-LAST:event_btnImprimirProductosActionPerformed

    private void btnOkAccActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkAccActionPerformed
        // TODO add your handling code here:
            String nombre= txtNombreProducto.getText();
            double precio= Double.parseDouble(txtPrecioProducto.getText());
            String marca= txtMarcaProducto.getText();
            String categoria = (String) cmbCategoria.getSelectedItem();
            
            String tipo= txtTipoAcc.getText();
            String color= txtColorAcc.getText();
            
            if(tipo.equals(" ")|| color.equals(" ")){
                JOptionPane.showMessageDialog(rootPane," Ingrese todos los campos  ");
            }else{
            Accesorio acc = new Accesorio(nombre,precio,marca,categoria,tipo,color);
            productos.add(acc);
            controller.escribirObjeto("producto.dat",productos);
            productos = controller.extraerObjetos("producto.dat");
            /*Object productosG [] = {acc.getNombre(),acc.getPrecio(),acc.getMarca(),acc.getCategoria()};
            DefaultTableModel model = (DefaultTableModel) tblProductos.getModel();
            model.addRow(productosG);*/
            //System.out.println(""+ productos);
            }
    }//GEN-LAST:event_btnOkAccActionPerformed

    private void btnOkCompActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkCompActionPerformed
        // TODO add your handling code here:
            String nombre= txtNombreProducto.getText();
            double precio= Double.parseDouble(txtPrecioProducto.getText());
            String marca= txtMarcaProducto.getText();
            String categoria = (String) cmbCategoria.getSelectedItem();
            
            String tipoC= txtTipoCompo.getText();
            int capacidadC= Integer.valueOf(txtCapacidadCompo.getText());
            int velocidadC= Integer.valueOf(txtVelocidadCompo.getText());
            
            if(tipoC.equals(" ")||capacidadC==0||velocidadC==0){
                JOptionPane.showMessageDialog(rootPane," Ingrese todos los campos  ");
            
            }else{
            
            Componente cpm = new Componente(nombre,precio,marca,categoria,tipoC,capacidadC,velocidadC);
            productos.add(cpm);
            controller.escribirObjeto("producto.dat",productos);
            productos = controller.extraerObjetos("producto.dat");
            }
    }//GEN-LAST:event_btnOkCompActionPerformed

    private void txtNombreProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreProductoKeyTyped
        // TODO add your handling code here:
         char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
       
        
    }//GEN-LAST:event_txtNombreProductoKeyTyped

    private void txtPrecioProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioProductoKeyTyped
        // TODO add your handling code here:
         char c= evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtPrecioProductoKeyTyped

    private void txtMarcaProductoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMarcaProductoKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_txtMarcaProductoKeyTyped

    private void txtCapacidadCompKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapacidadCompKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtCapacidadCompKeyTyped

    private void txtRAMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRAMKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtRAMKeyTyped

    private void txtProcesadorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProcesadorKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_txtProcesadorKeyTyped

    private void txtTipoAccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoAccKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_txtTipoAccKeyTyped

    private void txtColorAccKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtColorAccKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_txtColorAccKeyTyped

    private void txtTipoCompoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTipoCompoKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if((c<'a' || c>'z')&&(c<'A'|| c>'Z'))evt.consume();
    }//GEN-LAST:event_txtTipoCompoKeyTyped

    private void txtCapacidadCompoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCapacidadCompoKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtCapacidadCompoKeyTyped

    private void txtVelocidadCompoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVelocidadCompoKeyTyped
        // TODO add your handling code here:
        char c= evt.getKeyChar();
        
        if(c<'0' || c>'9')evt.consume();
    }//GEN-LAST:event_txtVelocidadCompoKeyTyped

    
    
    
    public void llenarGrid(){
        if(productos.size() > 0){
             Productos est = new Productos();
            DefaultTableModel model = (DefaultTableModel) tblProductos.getModel();
            for(int i = 0; i < productos.size(); i ++){
                est = (Productos) productos.get(i);
                Object productosG [] = {est.getNombre(),est.getPrecio(),est.getMarca()};
                model.insertRow(i, productosG);
            }
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductosI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductosI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductosI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductosI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductosI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnImprimirProductos;
    private javax.swing.JButton btnOkAcc;
    private javax.swing.JButton btnOkComp;
    private javax.swing.JButton btnOkComput;
    private javax.swing.JComboBox<String> cmbCategoria;
    private javax.swing.JComboBox<String> cmbTipoComputador;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelAccesorio;
    private javax.swing.JPanel panelComponente;
    private javax.swing.JPanel panelComputador;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtCapacidadComp;
    private javax.swing.JTextField txtCapacidadCompo;
    private javax.swing.JTextField txtColorAcc;
    private javax.swing.JTextField txtMarcaProducto;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtPrecioProducto;
    private javax.swing.JTextField txtProcesador;
    private javax.swing.JTextField txtRAM;
    private javax.swing.JTextField txtTipoAcc;
    private javax.swing.JTextField txtTipoCompo;
    private javax.swing.JTextField txtVelocidadCompo;
    // End of variables declaration//GEN-END:variables
}
